import S from "./MapLocationWait.module.scss";
import {MAX_WAIT_SIZE, minmax, scale} from "../../../util/common";
import React, {Component, ReactSVGElement} from "react";

export interface MapLocationWaitProps {
    isLast: boolean;
    waitList: number[];
    waitLeftCount: number;
    size: number;
    ratio: number;
    onWait: CallableFunction;
}

export const MapLocationWait = (props: MapLocationWaitProps) => {
    const {
        isLast,
        waitList,
        size,
        ratio,
        onWait,
        waitLeftCount
    } = props;

    const waitCount = waitList.length;
    let waitGroup = 1;
    // const waitList = new Array(waitCount).fill(0).map((value, index) => value + index);

    const buttonSize = Math.floor(scale(size, ratio)/ 2);
    const buttonStyle = {
        width: buttonSize,
        height: buttonSize,
        backgroundSize: Math.floor(buttonSize * 0.7)
    }

    const MARKER_COLORS = [
        '#ffffff',
        '#ffd3b2',
        '#ffa967',
        '#ffcf55',
        '#ff9900',
        '#ff780a',
        '#ff430a',
        '#ff0000'
    ];

    const paths = [
        "M3692 715 c24 -26 -311 -224 -522 -308 -155 -62 -481 -140 -511 -121 -5 3 -9 -50 -9 -129 l0 -134 41 3 c22 2 43 6 47 8 4 2 46 10 92 16 47 6 105 18 130 26 25 8 99 30 165 50 66 20 138 45 161 55 22 10 48 19 57 19 9 0 19 4 22 10 3 5 57 35 120 66 63 30 119 62 126 70 6 8 18 14 26 14 14 0 34 13 106 71 18 14 53 37 78 52 72 41 71 50 -18 140 -43 43 -87 83 -98 89 -11 6 -17 7 -13 3z",
        "M4522 2128 c-5 -7 -17 -60 -26 -117 -10 -58 -19 -109 -23 -114 -3 -4 -12 -36 -19 -70 -14 -58 -57 -183 -88 -252 -52 -115 -104 -218 -134 -265 -49 -77 -119 -180 -145 -213 l-21 -28 85 -85 c81 -81 87 -85 108 -72 12 7 32 29 43 48 12 19 36 54 55 77 18 23 33 45 33 49 0 4 6 15 14 23 25 28 156 278 199 381 40 93 77 203 95 280 43 180 52 227 55 295 l2 70 -111 3 c-81 2 -114 -1 -122 -10z",
        "M4228 3871 c-13 -11 -50 -49 -83 -86 l-58 -66 77 -113 c112 -166 197 -337 256 -516 30 -91 68 -242 75 -295 12 -98 28 -145 49 -151 12 -3 64 -4 116 -2 l95 3 1 60 c0 33 -5 85 -12 115 -7 30 -23 96 -35 145 -11 50 -25 110 -30 134 -5 24 -13 49 -18 55 -4 6 -16 36 -26 66 -10 30 -23 66 -30 80 -7 14 -28 61 -46 105 -18 44 -39 87 -45 95 -7 8 -18 26 -24 40 -25 57 -160 270 -171 270 -5 0 -19 18 -31 40 -13 22 -26 40 -29 40 -4 0 -17 -9 -31 -19z",
        "M2650 4660 l0 -125 126 -24 c70 -13 151 -32 180 -42 29 -11 61 -19 69 -19 18 0 152 -50 240 -90 173 -79 197 -93 350 -198 82 -56 109 -70 123 -63 22 12 152 146 152 158 0 4 -18 18 -40 31 -22 12 -40 26 -40 31 0 4 -30 27 -67 51 -38 23 -79 50 -93 60 -80 55 -304 162 -455 217 -136 50 -357 102 -464 109 -37 2 -68 10 -73 17 -4 6 -8 -44 -8 -113z",


        "M2114 4770 c-6 -6 -37 -12 -70 -15 -119 -8 -315 -57 -469 -116 -44 -17 -98 -38 -120 -46 -54 -20 -236 -112 -256 -129 -8 -8 -19 -14 -23 -14 -7 0 -80 -49 -137 -93 -20 -15 -39 -27 -43 -27 -14 0 -96 -72 -96 -84 0 -7 36 -47 80 -90 l79 -78 28 27 c15 14 44 35 63 47 19 12 45 30 57 41 68 61 461 243 568 263 22 4 54 13 70 19 17 7 87 23 158 36 l127 22 0 124 c0 68 -1 123 -3 123 -2 0 -8 -5 -13 -10z",
        "M499 3849 c-16 -17 -29 -36 -29 -42 0 -5 -17 -30 -37 -56 -39 -46 -53 -68 -75 -111 -6 -14 -20 -37 -30 -52 -25 -36 -128 -237 -128 -248 0 -5 -11 -33 -24 -62 -13 -29 -37 -100 -55 -158 -17 -58 -38 -126 -46 -151 -8 -25 -20 -82 -26 -125 -6 -43 -15 -98 -20 -122 -16 -73 -5 -82 106 -82 51 0 100 3 109 6 15 6 20 26 51 199 9 50 20 104 25 120 67 217 123 350 218 520 32 58 141 217 156 227 10 7 -140 168 -157 168 -5 0 -22 -14 -38 -31z",
        "M33 2124 c-7 -19 5 -116 31 -249 25 -128 118 -389 189 -532 43 -88 138 -245 182 -303 19 -25 46 -64 61 -87 14 -24 33 -43 42 -43 9 0 49 33 89 72 74 74 88 103 58 128 -54 45 -255 391 -255 440 0 10 -6 25 -13 32 -18 18 -54 115 -83 221 -13 49 -26 92 -29 97 -2 4 -12 51 -20 105 -23 142 -16 135 -141 135 -86 0 -106 -3 -111 -16z",
        "M989 633 c-44 -42 -79 -84 -79 -93 0 -9 11 -22 24 -28 14 -6 43 -27 64 -47 22 -19 44 -35 49 -35 6 0 16 -6 22 -13 23 -29 227 -142 358 -199 206 -89 316 -123 586 -178 27 -6 64 -10 83 -10 l34 0 0 128 0 127 -61 3 c-102 4 -445 99 -483 134 -6 4 -16 8 -24 8 -48 0 -375 187 -458 261 -11 11 -24 19 -28 19 -5 0 -44 -35 -87 -77z",
    ];

    return <>
        {isLast && waitLeftCount < MAX_WAIT_SIZE && <div className={S.button} style={buttonStyle} onClick={() => onWait()}/>}
        {waitCount > 0 &&
            <svg className={S.markers} xmlns="http://www.w3.org/2000/svg" width="478" height="478" viewBox="0 0 4780 4780">
                {waitList.map((groupIndex, index) =>
                    <path
                        fill={MARKER_COLORS[groupIndex]}
                        d={paths[index]}
                        key={index}
                    />
                )}
           </svg>
        }
    </>
}